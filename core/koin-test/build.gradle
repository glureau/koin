apply plugin: 'org.jetbrains.kotlin.multiplatform'

archivesBaseName = 'koin-test'

def ideaActive = System.getProperty('idea.active') == 'true'

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

kotlin {
    jvm()
//    js(BOTH) {
//    }
    js(IR) { // or: LEGACY, BOTH
        // ...
        nodejs()
        browser()
        binaries.executable() // not applicable to BOTH, see details below
    }
    wasmJs()
    wasmWasi()

    macosX64()
    macosArm64()
    iosX64()
    iosArm64()
//    iosArm32()
    iosSimulatorArm64()
//    watchosArm32()
    watchosArm64()
    watchosSimulatorArm64()
//    watchosX86()
    watchosX64()
    tvosArm64()
    tvosSimulatorArm64()
    tvosX64()

    mingwX64()
    linuxX64()
//    mingwX86()
//    linuxArm32Hfp()
//    linuxMips32()

    sourceSets {
        commonMain {
            dependencies {
                api kotlin("stdlib-common")
                api kotlin("test-common")
                api kotlin("test-annotations-common")

                api project(":koin-core")
            }
        }

        commonTest {
            dependencies {
                implementation kotlin("test-common")
                implementation kotlin("test-annotations-common")
//                implementation "co.touchlab:testhelp:$testhelp_version"
//                implementation "com.benasher44:uuid:$uuid_version"
            }
        }

        jvmMain {
            dependencies {
                api kotlin("stdlib-jdk8")
                api kotlin("reflect")
                api kotlin("test-junit")

                api project(":koin-core")
            }
        }

        jvmTest {
            dependencies {
                implementation kotlin("test-junit")
                implementation "org.mockito:mockito-inline:$mockito_version"
            }
        }

        jsMain {
            dependsOn commonMain
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-js'
                implementation 'org.jetbrains.kotlin:kotlin-test-js'
            }
        }

        jsTest {
            dependsOn commonTest
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-js'
            }
        }

        wasmMain {
            dependsOn commonMain
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-wasm'
                implementation "co.touchlab:stately-concurrency:$stately_concurrency"
            }
        }

        wasmWasiMain {
            dependsOn commonMain
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-wasm'
                implementation "co.touchlab:stately-concurrency:$stately_concurrency"
            }
        }

        nativeMain {
            dependsOn commonMain
        }

        nativeTest {
            dependsOn commonTest
        }

        configure([
                targets.macosX64,
                targets.macosArm64,
                targets.watchosArm64,
                targets.watchosX64,
                targets.watchosSimulatorArm64,
                targets.tvosArm64,
                targets.tvosSimulatorArm64,
                targets.iosX64,
                targets.iosSimulatorArm64,
                targets.iosArm64,
                targets.linuxX64,
                targets.mingwX64,
//                targets.linuxArm32Hfp,
//                targets.linuxMips32,
//                targets.mingwX86
        ]) {
            compilations.main.source(sourceSets.nativeMain)
            compilations.test.source(sourceSets.nativeTest)
        }

    }
}

apply from: '../../gradle/publish-to-central.gradle'
